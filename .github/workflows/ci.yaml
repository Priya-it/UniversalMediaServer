name: CI

on: [push]

jobs:
  macos:
      (github.event_name == 'push' && (github.actor == 'renovate[bot]' || github.ref_name == 'main')) ||
      (github.event_name == 'pull_request')
    name: macOS
    runs-on: macos-12
    strategy:
      matrix:
        # test against two different xcode version on MacOS
        xcode: [ 9.4.1, latest ]
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas
          pip install numpy
      - run: sudo apt update
      - run: sudo apt install inotify-tools
      - run: inotifywait -mr /home/runner/work/UniversalMediaServer/UniversalMediaServer/ --format '%T;%w;%f;%e' --timefmt %T -o /home/runner/inotify-logs.csv & echo 'basak'
      - run: touch starting_macos_uses-checkout_17
      - run: rm starting_macos_uses-checkout_17
      - uses: actions/checkout@v3
      - run: touch starting_macos_SetupJDK_18
      - run: rm starting_macos_SetupJDK_18
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'liberica'
          java-version: 17
          cache: 'maven'
      - run: touch starting_macos_CacheNodedependencies_24
      - run: rm starting_macos_CacheNodedependencies_24
      - name: Cache Node dependencies
        id: cache-node-dependencies
        uses: actions/cache@v3
        with:
          path: |
            react-client/.yarn
            react-client/node
            react-client/node_modules
          key: node-dependencies-${{ hashFiles('yarn.lock') }}
      - run: touch starting_macos_RuntestsXCodematrixxcode_33
      - run: rm starting_macos_RuntestsXCodematrixxcode_33
      - name: Run tests (XCode ${{ matrix.xcode }})
        run: DEVELOPER_DIR=/Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer && mvn verify -P testing-macos

  windows-latest:
      (github.event_name == 'push' && (github.actor == 'renovate[bot]' || github.ref_name == 'main')) ||
      (github.event_name == 'pull_request')
    name: Windows and lint
    runs-on: windows-latest
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas
          pip install numpy
      - run: sudo apt update
      - run: sudo apt install inotify-tools
      - run: inotifywait -mr /home/runner/work/UniversalMediaServer/UniversalMediaServer/ --format '%T;%w;%f;%e' --timefmt %T -o /home/runner/inotify-logs.csv & echo 'basak'
      - run: touch starting_windowslatest_uses-checkout_43
      - run: rm starting_windowslatest_uses-checkout_43
      - uses: actions/checkout@v3
      - run: touch starting_windowslatest_SetupJDK_44
      - run: rm starting_windowslatest_SetupJDK_44
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'liberica'
          java-version: 17
          cache: 'maven'
      - run: touch starting_windowslatest_CacheNodedependencies_50
      - run: rm starting_windowslatest_CacheNodedependencies_50
      - name: Cache Node dependencies
        id: cache-node-dependencies
        uses: actions/cache@v3
        with:
          path: |
            react-client/.yarn
            react-client/node
            react-client/node_modules
          key: node-dependencies-${{ hashFiles('yarn.lock') }}
      - run: touch starting_windowslatest_Runlinterandtests_59
      - run: rm starting_windowslatest_Runlinterandtests_59
      - name: Run linter and tests
        run: mvn verify -P linter

  linux-focal:
      (github.event_name == 'push' && (github.actor == 'renovate[bot]' || github.ref_name == 'main')) ||
      (github.event_name == 'pull_request')
    name: Linux 20.04
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas
          pip install numpy
      - run: sudo apt update
      - run: sudo apt install inotify-tools
      - run: inotifywait -mr /home/runner/work/UniversalMediaServer/UniversalMediaServer/ --format '%T;%w;%f;%e' --timefmt %T -o /home/runner/inotify-logs.csv & echo 'basak'
      - run: touch starting_linuxfocal_uses-checkout_69
      - run: rm starting_linuxfocal_uses-checkout_69
      - uses: actions/checkout@v3
      - run: touch starting_linuxfocal_SetupJDK_70
      - run: rm starting_linuxfocal_SetupJDK_70
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'liberica'
          java-version: 17
          cache: 'maven'
      - run: touch starting_linuxfocal_CacheNodedependencies_76
      - run: rm starting_linuxfocal_CacheNodedependencies_76
      - name: Cache Node dependencies
        id: cache-node-dependencies
        uses: actions/cache@v3
        with:
          path: |
            react-client/.yarn
            react-client/node
            react-client/node_modules
          key: node-dependencies-${{ hashFiles('yarn.lock') }}
      - run: touch starting_linuxfocal_Runtests_85
      - run: rm starting_linuxfocal_Runtests_85
      - name: Run tests
        run: |
          sudo apt-get -y install libmms0
          wget --no-check-certificate https://mediaarea.net/download/binary/libzen0/0.4.39/libzen0v5_0.4.39-1_amd64.xUbuntu_20.04.deb
          sudo dpkg -i libzen0v5_0.4.39-1_amd64.xUbuntu_20.04.deb
          wget --no-check-certificate https://mediaarea.net/download/binary/libmediainfo0/22.09/libmediainfo0v5_22.09-1_amd64.xUbuntu_20.04.deb
          sudo dpkg -i libmediainfo0v5_22.09-1_amd64.xUbuntu_20.04.deb
          mvn verify -P testing

  linux-jammy:
      (github.event_name == 'push' && (github.actor == 'renovate[bot]' || github.ref_name == 'main')) ||
      (github.event_name == 'pull_request')
    name: Linux 22.04
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas
          pip install numpy
      - run: sudo apt update
      - run: sudo apt install inotify-tools
      - run: inotifywait -mr /home/runner/work/UniversalMediaServer/UniversalMediaServer/ --format '%T;%w;%f;%e' --timefmt %T -o /home/runner/inotify-logs.csv & echo 'basak'
      - run: touch starting_linuxjammy_uses-checkout_101
      - run: rm starting_linuxjammy_uses-checkout_101
      - uses: actions/checkout@v3
      - run: touch starting_linuxjammy_SetupJDK_102
      - run: rm starting_linuxjammy_SetupJDK_102
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'liberica'
          java-version: 17
          cache: 'maven'
      - run: touch starting_linuxjammy_CacheNodedependencies_108
      - run: rm starting_linuxjammy_CacheNodedependencies_108
      - name: Cache Node dependencies
        id: cache-node-dependencies
        uses: actions/cache@v3
        with:
          path: |
            react-client/.yarn
            react-client/node
            react-client/node_modules
          key: node-dependencies-${{ hashFiles('yarn.lock') }}
      - run: touch starting_linuxjammy_Runtests_117
      - run: rm starting_linuxjammy_Runtests_117
      - name: Run tests
        run: |
          sudo apt-get -y install libmms0
          wget --no-check-certificate https://mediaarea.net/download/binary/libzen0/0.4.39/libzen0v5_0.4.39-1_amd64.xUbuntu_22.04.deb
          sudo dpkg -i libzen0v5_0.4.39-1_amd64.xUbuntu_22.04.deb
          wget --no-check-certificate https://mediaarea.net/download/binary/libmediainfo0/22.09/libmediainfo0v5_22.09-1_amd64.xUbuntu_22.04.deb
          sudo dpkg -i libmediainfo0v5_22.09-1_amd64.xUbuntu_22.04.deb
          mvn verify -P testing
      - run: touch starting_finished_finished_8979874
        if: always()
      - run: rm starting_finished_finished_8979874
        if: always()
      - name: Execute py script # run file
        if: always()
        run: |
          python .github/workflows/script.py
      - run: cp /home/runner/inotify-logs.csv /home/runner/work/UniversalMediaServer/UniversalMediaServer/optimizing-ci-builds-ci-analysis/
        if: always()
      - name: Pushes analysis to another repository
        if: always()
        id: push_directory
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source-directory: 'optimizing-ci-builds-ci-analysis'
          destination-github-username: 'Priya-it'
          destination-repository-name: 'ci-analyzes'
          target-branch: 'UniversalMediaServer.1671860242'
          target-directory: 'UniversalMediaServer/1671860242/.github/workflows/ci.yaml/linuxjammy'

